// <auto-generated />
using API.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace API.Migrations
{
    [DbContext(typeof(AppDbContext))]
    partial class AppDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("API.Models.Interest", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Interests");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Description = "Att ta bilder med kamera",
                            Title = "Fotografi"
                        },
                        new
                        {
                            Id = 2,
                            Description = "Att laga god mat",
                            Title = "Matlagning"
                        },
                        new
                        {
                            Id = 3,
                            Description = "Att skriva kod i olika språk",
                            Title = "Programmering"
                        },
                        new
                        {
                            Id = 4,
                            Description = "Upptäcka nya platser",
                            Title = "Resa"
                        },
                        new
                        {
                            Id = 5,
                            Description = "Lyssna och skapa musik",
                            Title = "Musik"
                        },
                        new
                        {
                            Id = 6,
                            Description = "Hålla kroppen i form",
                            Title = "Träning"
                        });
                });

            modelBuilder.Entity("API.Models.Link", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Url")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Links");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Url = "https://se.pinterest.com/"
                        },
                        new
                        {
                            Id = 2,
                            Url = "https://www.w3schools.com/"
                        },
                        new
                        {
                            Id = 3,
                            Url = "https://recept.se/"
                        },
                        new
                        {
                            Id = 4,
                            Url = "https://www.momondo.se/"
                        },
                        new
                        {
                            Id = 5,
                            Url = "https://spotify.com/"
                        },
                        new
                        {
                            Id = 6,
                            Url = "https://nordicwellness.se/"
                        },
                        new
                        {
                            Id = 7,
                            Url = "https://codecademy.com/"
                        },
                        new
                        {
                            Id = 8,
                            Url = "https://music.amazon.com/"
                        });
                });

            modelBuilder.Entity("API.Models.Person", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Persons");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Alice Andersson",
                            PhoneNumber = "0701234567"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Bob Berg",
                            PhoneNumber = "0727654321"
                        },
                        new
                        {
                            Id = 3,
                            Name = "Carla Carlsson",
                            PhoneNumber = "0739876543"
                        },
                        new
                        {
                            Id = 4,
                            Name = "David Dahl",
                            PhoneNumber = "0761122334"
                        });
                });

            modelBuilder.Entity("InterestLink", b =>
                {
                    b.Property<int>("InterestsId")
                        .HasColumnType("int");

                    b.Property<int>("LinksId")
                        .HasColumnType("int");

                    b.HasKey("InterestsId", "LinksId");

                    b.HasIndex("LinksId");

                    b.ToTable("InterestLink");

                    b.HasData(
                        new
                        {
                            InterestsId = 1,
                            LinksId = 1
                        },
                        new
                        {
                            InterestsId = 3,
                            LinksId = 2
                        },
                        new
                        {
                            InterestsId = 2,
                            LinksId = 3
                        },
                        new
                        {
                            InterestsId = 4,
                            LinksId = 4
                        },
                        new
                        {
                            InterestsId = 5,
                            LinksId = 5
                        },
                        new
                        {
                            InterestsId = 6,
                            LinksId = 6
                        },
                        new
                        {
                            InterestsId = 3,
                            LinksId = 7
                        },
                        new
                        {
                            InterestsId = 5,
                            LinksId = 8
                        });
                });

            modelBuilder.Entity("LinkPerson", b =>
                {
                    b.Property<int>("LinksId")
                        .HasColumnType("int");

                    b.Property<int>("PersonsId")
                        .HasColumnType("int");

                    b.HasKey("LinksId", "PersonsId");

                    b.HasIndex("PersonsId");

                    b.ToTable("LinkPerson");

                    b.HasData(
                        new
                        {
                            LinksId = 1,
                            PersonsId = 1
                        },
                        new
                        {
                            LinksId = 2,
                            PersonsId = 1
                        },
                        new
                        {
                            LinksId = 3,
                            PersonsId = 2
                        },
                        new
                        {
                            LinksId = 4,
                            PersonsId = 3
                        },
                        new
                        {
                            LinksId = 5,
                            PersonsId = 4
                        },
                        new
                        {
                            LinksId = 6,
                            PersonsId = 2
                        },
                        new
                        {
                            LinksId = 7,
                            PersonsId = 3
                        },
                        new
                        {
                            LinksId = 8,
                            PersonsId = 1
                        });
                });

            modelBuilder.Entity("InterestLink", b =>
                {
                    b.HasOne("API.Models.Interest", null)
                        .WithMany()
                        .HasForeignKey("InterestsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("API.Models.Link", null)
                        .WithMany()
                        .HasForeignKey("LinksId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("LinkPerson", b =>
                {
                    b.HasOne("API.Models.Link", null)
                        .WithMany()
                        .HasForeignKey("LinksId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("API.Models.Person", null)
                        .WithMany()
                        .HasForeignKey("PersonsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
